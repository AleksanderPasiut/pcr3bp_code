///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Author: Aleksander M. Pasiut
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

#include <leo/misc/set_utilities.hpp>
#include "pcr3bp_reg_lyapunov_orbit.hpp"

namespace Ursa
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//! Lookup table
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class LyapunovOrbitRegLookupTable
{
public:
    struct Entry
    {
        Real u0;
        Real pv0;
        Real u1;
        Real v1;
        Real pu1;
        Real pv1;
        Real h1;

        bool operator< (const Entry& rhs) const
        {
            return this->u0 < rhs.u0;
        }
    };

    static LyapunovOrbitRegLookupTable& get()
    {
        static LyapunovOrbitRegLookupTable instance;
        return instance;
    }

    Entry get_base(Carina::Real u0) noexcept
    {
        auto key_func = [](const Entry& entry) -> double { return entry.u0; };
        return Leo::get_by_double_key(m_lookup, u0, key_func);
    }

    std::set<Entry>::const_iterator begin() const
    {
        return m_lookup.begin();
    }

    std::set<Entry>::const_iterator end() const
    {
        return m_lookup.end();
    }

private:
    LyapunovOrbitRegLookupTable()
        : m_lookup({
            Entry{ -0.9, 2.07966418727585, -0.0243530999622503, 0.929456057281101, 1.94703805142689, 0.129340487932279, 0.316880148088458 },
            Entry{ -0.85, 2.14599398006953, -0.0184995400039362, 0.923894766756697, 1.92302693559768, 0.286001092861556, 0.289908700852049 },
            Entry{ -0.8, 2.20924846334891, -0.0130553838363269, 0.917544529788206, 1.88326356730928, 0.420009830177562, 0.248515908730217 },
            Entry{ -0.75, 2.27138643865194, -0.00590952216271202, 0.91272585498726, 1.83102452613028, 0.540210681894799, 0.200258273977869 },
            Entry{ -0.7, 2.3330406576574, 0.00329953401750108, 0.910290388058648, 1.76786893894127, 0.650722390989954, 0.148424134968364 },
            Entry{ -0.65, 2.3938218227899, 0.0143622675416212, 0.910256399701345, 1.69507900691377, 0.753556765992737, 0.0944463567098267 },
            Entry{ -0.6, 2.45287591434231, 0.0269499107609204, 0.912229085228087, 1.61397533670696, 0.849703671440248, 0.0388944511139501 },
            Entry{ -0.55, 2.50924662522642, 0.0407846131084017, 0.915653160791209, 1.52594119826489, 0.93965553043023, -0.0180481450241389 },
            Entry{ -0.5, 2.56206761838881, 0.0556877328314945, 0.919953565022716, 1.43236946878385, 1.02367630215664, -0.0763418643217674 },
            Entry{ -0.45, 2.61064271002885, 0.0715774510705016, 0.924604535900154, 1.33460513414431, 1.10194297304647, -0.135969395785201 },
            Entry{ -0.4, 2.65446051607212, 0.0884489410158202, 0.929155072727621, 1.23390638622151, 1.17461821858885, -0.196880421871019 },
            Entry{ -0.35, 2.69317648904756, 0.106351950984915, 0.9332303567559, 1.13142630734186, 1.24188465366522, -0.25897264590264 },
            Entry{ -0.3, 2.72658292109949, 0.125371444139823, 0.936521832129244, 1.02820976045245, 1.30395798469219, -0.322091252576517 },
            Entry{ -0.25, 2.75457796594528, 0.145612603798094, 0.938773315738884, 0.925199253073245, 1.36108912814652, -0.38603643929999 },
            Entry{ -0.2, 2.77713854720477, 0.167189768128862, 0.939766888841629, 0.823245028816146, 1.41356097854771, -0.450573430718153 },
            Entry{ -0.15, 2.79429858534586, 0.190218358693272, 0.939310175512318, 0.723116426989487, 1.46168286252285, -0.515442270939414 },
            Entry{ -0.1, 2.8061323520549, 0.214808882499991, 0.937225483718535, 0.625512932830753, 1.50578418018222, -0.580366294486584 },
            Entry{ -0.05, 2.81274215572128, 0.241062264612948, 0.933340766195714, 0.531074229261756, 1.54620788952952, -0.645058995755009 },
            Entry{ 0.0, 2.81424945589406, 0.269065961601882, 0.92748216681612, 0.440389068592841, 1.58330405027848, -0.709229389408038 },
            Entry{ 0.05, 2.81078860757323, 0.298890467396106, 0.919467884117996, 0.354003045668112, 1.61742342996193, -0.772586093914396 },
            Entry{ 0.1, 2.80250260461651, 0.330585945741174, 0.909103115199172, 0.272425478670596, 1.64891107889458, -0.834840399071645 },
            Entry{ 0.15, 2.78954036429912, 0.364178815554917, 0.896175893920069, 0.196135662204549, 1.67809973736757, -0.89570856057355 },
            Entry{ 0.2, 2.77205525358729, 0.399668189368407, 0.880453684533375, 0.125588798042613, 1.70530290914841, -0.954913532745427 },
            Entry{ 0.25, 2.75020470519904, 0.437022134529448, 0.861680622655496, 0.0612219707091093, 1.73080739086405, -1.0121863197147 },
            Entry{ 0.3, 2.72415092510994, 0.47617380845428, 0.839575297967107, 0.00346066044697709, 1.75486495559172, -1.06726710270182 },
            Entry{ 0.35, 2.69406288530536, 0.517017636630515, 0.813828927488036, -0.0472734600502256, 1.77768270058149, -1.11990629145291 },
            Entry{ 0.4, 2.66012008647257, 0.559405895740964, 0.784103633963189, -0.0905521977722502, 1.79941118389474, -1.16986565745052 },
            Entry{ 0.45, 2.62251908451764, 0.603146411883486, 0.750030230675141, -0.125925748355503, 1.82012867478092, -1.21691974922837 },
            Entry{ 0.5, 2.58148475715565, 0.648002746584133, 0.711204213148192, -0.152898647025357, 1.83981811523647, -1.2608578993372 },
            Entry{ 0.55, 2.53729031987492, 0.69369957482454, 0.667177058714966, -0.170888557866728, 1.85832944093048, -1.30148739421915 },
            Entry{ 0.6, 2.49029456538452, 0.739938769201081, 0.617436094668482, -0.179151311219937, 1.87531018230373, -1.3386390321317 },
            Entry{ 0.65, 2.44101514387963, 0.786437874549794, 0.561356275042041, -0.176638028101671, 1.89006092711658, -1.37217809103235 },
            Entry{ 0.7, 2.39028154807994, 0.83301622426888, 0.498079029727837, -0.161716993151282, 1.90119168365363, -1.40202940475154 },
            Entry{ 0.75, 2.33956855881936, 0.879778659869078, 0.42618326466633, -0.131672994845022, 1.90566601687205, -1.42824688615203 },
            Entry{ 0.8, 2.29167219531697, 0.927418688451547, 0.342681037052041, -0.0824177056350399, 1.89552153532242, -1.45126404632663 },
            Entry{ 0.85, 2.25057404704798, 0.976365837034014, 0.239428891782203, -0.0174119493377902, 1.84221617744245, -1.47322151834189 },
            Entry{ 0.9, 2.16159968744753, 0.989665684066782, 0.0847715552400763, -0.152232531945212, 1.49126811774215, -1.51449792016274 }
        })
    {}

    LyapunovOrbitRegLookupTable(const LyapunovOrbitRegLookupTable&) = delete;
    LyapunovOrbitRegLookupTable& operator= (const LyapunovOrbitRegLookupTable&) = delete;

    const std::set<Entry> m_lookup;
};

}
